{
  "docker": {
    "name": "docker",
    "alias": [
      "doc",
      "d",
      "dc",
      "di",
      "dcp",
      "dm",
      "dp",
      "dpg",
      "dr"
    ],
    "tasks": {
      "build": {
        "name": "build",
        "alias": [
          "bld",
          "b"
        ],
        "description": "Runs docker build command for a container",
        "example": "keg docker build <options>",
        "locationContext": "REPO",
        "options": {
          "context": {
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Context of the docker container to build",
            "example": "keg docker build --context core",
            "enforced": true
          },
          "args": {
            "description": "Add build args from container env files",
            "default": true
          },
          "cache": {
            "description": "Docker will use build cache when building the image",
            "example": "keg docker build --cache false",
            "default": true
          },
          "core": {
            "description": "Use the local keg-core package.json when install node_modules during the build",
            "example": "keg docker build --context tap --core true",
            "default": false
          },
          "local": {
            "description": "Copy the local repo into the docker container at build time",
            "example": "keg docker build --local",
            "default": false
          },
          "tap": {
            "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\"",
            "example": "keg docker build --context tap --tap events-force"
          },
          "tags": {
            "description": "Extra tags to add to the docker image after its build. Uses commas (,) to separate",
            "example": "keg docker build tags=my-tag,local,development"
          },
          "log": {
            "description": "Log docker command",
            "example": "keg docker build log=true",
            "default": false
          }
        },
        "tasks": {}
      },
      "compose": {
        "name": "compose",
        "alias": [
          "comp",
          "cmp",
          "cm",
          "dcp"
        ],
        "description": "Runs docker compose command",
        "example": "keg docker compose <options>",
        "tasks": {
          "build": {
            "name": "build",
            "alias": [
              "b"
            ],
            "description": "Run docker-compose build command",
            "example": "keg docker compose build <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of docker compose build command (tap || core)",
                "example": "keg docker compose build --context core",
                "default": "base"
              },
              "clean": {
                "alias": [
                  "remove"
                ],
                "description": "Always remove intermediate containers",
                "example": "keg docker compose build --clean",
                "default": true
              },
              "cache": {
                "description": "Use cache when building the container",
                "example": "keg docker compose build --cache",
                "default": true
              },
              "local": {
                "description": "Copy the local repo into the docker container at build time",
                "example": "keg docker build --local",
                "default": false
              },
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker compose build --log false",
                "default": true
              },
              "pull": {
                "description": "Always attempt to pull a newer version of the image",
                "example": "keg docker compose build --pull",
                "default": true
              }
            },
            "tasks": {}
          },
          "down": {
            "name": "down",
            "alias": [
              "kill"
            ],
            "description": "Run docker-compose down command",
            "example": "keg docker compose down <options>",
            "options": {
              "context": {
                "description": "Context of docker compose down command (tap | core | components)",
                "example": "keg docker compose down --context core",
                "required": true
              },
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker compose down --log false",
                "default": true
              },
              "tap": {
                "description": "Name of the tap to down. Required when \"context\" is \"tap\"",
                "example": "keg docker compose down --context tap --tap events-force"
              },
              "remove": {
                "alias": [
                  "rm"
                ],
                "allowed": [
                  "images",
                  "volumes",
                  "all",
                  "orphans"
                ],
                "description": "Remove collateral docker items while bringing the docker-compose service down",
                "example": "keg docker compose down --remove images,volumes"
              }
            },
            "tasks": {}
          },
          "restart": {
            "name": "restart",
            "alias": [
              "rest",
              "rerun",
              "rr",
              "rst"
            ],
            "description": "Run docker-compose up command",
            "example": "keg docker compose up <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of docker compose up command (components || core || tap)",
                "example": "keg docker compose restart --context core",
                "required": true
              },
              "tap": {
                "description": "Name of the tap to run. Must be a tap linked in the global config",
                "example": "keg tap restart --tap events-force"
              },
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker compose build --log false",
                "default": false
              }
            },
            "tasks": {}
          },
          "stop": {
            "name": "stop",
            "alias": [
              "stp",
              "halt"
            ],
            "description": "Run docker-compose stop command",
            "example": "keg docker compose stop <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of docker compose down command (tap | core | components)",
                "example": "keg docker compose stop --context core",
                "required": true
              },
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker compose build --log false",
                "default": true
              },
              "tap": {
                "description": "Name of the tap to down. Required when \"context\" is \"tap\"",
                "example": "keg docker compose stop --context tap --tap events-force"
              }
            },
            "tasks": {}
          },
          "up": {
            "name": "up",
            "alias": [
              "u"
            ],
            "description": "Run docker-compose up command",
            "example": "keg docker compose up <options>",
            "options": {
              "build": {
                "description": "Build the docker containers before starting",
                "example": "keg docker compose up --build true",
                "default": false
              },
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of docker compose up command (components || core || tap)",
                "example": "keg docker compose up --context core",
                "required": true
              },
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker compose build --log false",
                "default": true
              }
            },
            "tasks": {}
          },
          "b": "build",
          "kill": "down",
          "rest": "restart",
          "rerun": "restart",
          "rr": "restart",
          "rst": "restart",
          "stp": "stop",
          "halt": "stop",
          "u": "up"
        }
      },
      "container": {
        "name": "container",
        "alias": [
          "cont",
          "c",
          "dc"
        ],
        "description": "Runs docker container command",
        "example": "keg docker container <options>",
        "tasks": {
          "clean": {
            "name": "clean",
            "alias": [
              "cl"
            ],
            "description": "Removes all stopped docker containers",
            "example": "keg docker container clean <options>",
            "options": {
              "log": {
                "description": "Log the clean command to the terminal",
                "example": "keg docker container clean --log false",
                "default": true
              }
            },
            "tasks": {}
          },
          "commit": {
            "name": "commit",
            "alias": [
              "com"
            ],
            "description": "Creates an image from a docker container",
            "example": "keg docker container commit <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of the docker container to build",
                "enforced": true
              },
              "author": {
                "description": "The author of the new docker image",
                "example": "keg docker container commit --author \"John Doe\""
              },
              "log": {
                "description": "Log the commit command to the terminal",
                "example": "keg docker container commit --log false",
                "default": true
              },
              "message": {
                "description": "Apply a commit message to the docker image",
                "example": "keg docker container commit --message \"My Image\""
              }
            },
            "tasks": {}
          },
          "remove": {
            "name": "remove",
            "alias": [
              "rm",
              "rmc"
            ],
            "description": "Remove docker container by name",
            "example": "keg docker container remove <options>",
            "options": {
              "context": {
                "alias": [
                  "name"
                ],
                "description": "Name of the container to remove",
                "example": "keg docker container remove --name core"
              },
              "force": {
                "description": "Add the force argument to the docker command",
                "example": "keg docker container remove --force "
              }
            },
            "tasks": {}
          },
          "stop": {
            "name": "stop",
            "alias": [
              "stp",
              "halt",
              "hlt"
            ],
            "description": "Removes all stopped docker containers",
            "example": "keg docker container clean <options>",
            "options": {
              "log": {
                "description": "Log the compose command to the terminal",
                "example": "keg docker container commit --log false",
                "default": true
              }
            },
            "tasks": {}
          },
          "cl": "clean",
          "com": "commit",
          "rm": "remove",
          "rmc": "remove",
          "stp": "stop",
          "halt": "stop",
          "hlt": "stop"
        },
        "options": {
          "cmd": {
            "description": "Docker container command to run. Default ( ls )",
            "example": "keg docker container ls"
          },
          "name": {
            "description": "Name of the container to run the command on",
            "example": "keg docker container --name core"
          },
          "force": {
            "description": "Add the force argument to the docker command",
            "example": "keg docker container --force"
          },
          "format": {
            "allowed": [
              "json"
            ],
            "description": "Output format of the docker command",
            "example": "keg docker container --format json"
          }
        }
      },
      "copy": {
        "name": "copy",
        "alias": [
          "cp"
        ],
        "description": "Copy files to and from a docker container",
        "example": "keg docker copy <options>",
        "options": {
          "context": {
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Context of the docker container to build",
            "enforced": true
          },
          "tap": {
            "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\"",
            "example": "keg docker build --context tap --tap events-force"
          },
          "container": {
            "alias": [
              "id"
            ],
            "description": "Name or Id of the container to sync with. Overrides context option",
            "example": "keg mutagen create --container my-container"
          },
          "local": {
            "alias": [
              "from"
            ],
            "description": "Local path to sync when container option is passed",
            "example": "keg mutagen create --container my-container --local ~/keg/keg-core",
            "depends": {
              "container": true
            },
            "required": true
          },
          "remote": {
            "alias": [
              "to"
            ],
            "description": "Remote path to sync when container option is passed",
            "example": "keg mutagen create --container my-container --remote keg/keg-core",
            "depends": {
              "container": true
            },
            "required": true
          },
          "log": {
            "description": "Log docker command",
            "example": "keg docker copy --log",
            "default": false
          }
        },
        "tasks": {}
      },
      "destroy": {
        "name": "destroy",
        "alias": [
          "des",
          "kill"
        ],
        "description": "Destroy docker items of the passed in type",
        "example": "keg docker destroy <options>",
        "options": {
          "type": {
            "allowed": [
              "containers",
              "container",
              "cont",
              "c",
              "images",
              "image",
              "img",
              "i",
              "volumes",
              "volume",
              "vol",
              "v"
            ],
            "description": "Type of docker item to destroy",
            "example": "keg docker destroy --type containers",
            "ask": {
              "type": "list",
              "default": "N/A",
              "message": "Please select a type...",
              "choices": [
                "Containers",
                "Images",
                "Volumes"
              ]
            }
          },
          "reference": {
            "alias": [
              "refs",
              "ref"
            ],
            "description": "Comma separated list of names or ids referencing the items to be removed. ( Defaults to all of type )",
            "example": "keg docker destroy --type containers --reference my-container,other-container"
          }
        },
        "tasks": {}
      },
      "exec": {
        "name": "exec",
        "alias": [
          "ex",
          "attach",
          "att"
        ],
        "description": "Execute a command on a running docker container",
        "example": "keg docker exec <options>",
        "options": {
          "context": {
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Context or name of the container to run the command on",
            "example": "keg docker exec --context core",
            "enforced": true
          },
          "cmd": {
            "description": "Docker container command to run. Default ( /bin/sh )",
            "example": "keg docker exec ls -ls",
            "default": "sh"
          },
          "options": {
            "alias": [
              "opts"
            ],
            "description": "Extra docker exec command options",
            "default": "-it"
          },
          "tap": {
            "description": "Tap name when \"context\" options is set to \"tap\"",
            "example": "keg docker exec --context tap --tap my-tap"
          }
        },
        "tasks": {}
      },
      "image": {
        "name": "image",
        "alias": [
          "img",
          "i",
          "di"
        ],
        "tasks": {
          "clean": {
            "name": "clean",
            "alias": [
              "cl"
            ],
            "description": "Remove unnamed docker images",
            "example": "keg docker image clean <options>",
            "options": {
              "force": {
                "description": "Add the force argument to the docker command",
                "example": "keg docker image remove --force "
              }
            },
            "tasks": {}
          },
          "get": {
            "name": "get",
            "alias": [
              "gt",
              "g"
            ],
            "description": "Get docker image by name or id",
            "example": "keg docker image get <options>",
            "options": {
              "context": {
                "alias": [
                  "name"
                ],
                "description": "Context, name or id of the image to get, optionally with the tag.",
                "example": "keg docker image get --name core:0.1.4 ( tag optional )",
                "required": true
              },
              "tag": {
                "description": "Tag name of the image to get",
                "example": "keg docker image get --tag <tag name>"
              }
            },
            "tasks": {}
          },
          "remove": {
            "name": "remove",
            "alias": [
              "rm",
              "rmi"
            ],
            "description": "Remove docker image by name",
            "example": "keg docker image remove <options>",
            "options": {
              "context": {
                "alias": [
                  "name"
                ],
                "description": "Name or ID of the image to remove",
                "example": "keg docker image remove --context core"
              },
              "image": {
                "description": "Name or ID of the image to remove",
                "example": "keg docker image remove --image my-image"
              },
              "tag": {
                "description": "Tag name of the image to remove",
                "example": "keg docker image remove --tag <tag name>"
              },
              "force": {
                "description": "Add the force argument to the docker command",
                "example": "keg docker image remove --force "
              }
            },
            "tasks": {}
          },
          "run": {
            "name": "run",
            "alias": [
              "rn",
              "connect",
              "con"
            ],
            "description": "Run a docker image as a container and auto-conntect to it",
            "example": "keg docker image run <options>",
            "options": {
              "context": {
                "alias": [
                  "name"
                ],
                "description": "Name of the image to run",
                "example": "keg docker image run --context core"
              },
              "cleanup": {
                "alias": [
                  "clean",
                  "rm"
                ],
                "description": "Auto remove the docker container after exiting",
                "example": "keg docker image run  --cleanup false",
                "default": true
              },
              "image": {
                "description": "Image id of the image to run",
                "example": "keg docker image run --image <id>"
              },
              "options": {
                "alias": [
                  "opts"
                ],
                "description": "Extra docker run command options",
                "example": "keg docker image run --options \\\"-p 80:19006 -e MY_ENV=data\\\"",
                "default": []
              },
              "entry": {
                "description": "Overwrite entry of the image. Use escaped quotes for spaces ( bin/bas h)",
                "example": "keg docker image run --entry \\\"node index.js\\\"",
                "default": "/bin/sh"
              },
              "log": {
                "description": "Log the docker run command to the terminal",
                "example": "keg docker image run --log",
                "default": false
              },
              "tag": {
                "description": "Tag of the image to be run",
                "example": "keg docker image run --context core --tag updates"
              }
            },
            "tasks": {}
          },
          "tag": {
            "name": "tag",
            "alias": [
              "t"
            ],
            "description": "Runs docker image tag",
            "example": "keg docker image tag <options>",
            "tasks": {
              "remove": {
                "name": "remove",
                "alias": [
                  "rm",
                  "delete",
                  "del"
                ],
                "description": "Removes a tag from an image",
                "options": {
                  "context": {
                    "alias": [
                      "name"
                    ],
                    "allowed": [
                      "base",
                      "components",
                      "core",
                      "proxy",
                      "regulator",
                      "tap"
                    ],
                    "description": "Context or name of the image to tag",
                    "example": "keg docker image tag --context core",
                    "enforced": true
                  },
                  "log": {
                    "description": "Log the docker tag command",
                    "example": "keg docker image tag --log false",
                    "default": true
                  },
                  "tag": {
                    "description": "Tag to add to the image",
                    "example": "keg docker image tag --tag my-tag",
                    "required": true
                  }
                },
                "tasks": {}
              },
              "rm": "remove",
              "delete": "remove",
              "del": "remove"
            },
            "options": {
              "context": {
                "alias": [
                  "name"
                ],
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context or name of the image to tag",
                "example": "keg docker image tag --context core",
                "enforced": true
              },
              "log": {
                "description": "Log the docker tag command",
                "example": "keg docker image tag --log false",
                "default": true
              },
              "tag": {
                "description": "Tag to add to the image",
                "example": "keg docker image tag --tag my-tag",
                "required": true
              }
            }
          },
          "cl": "clean",
          "gt": "get",
          "g": "get",
          "rm": "remove",
          "rmi": "remove",
          "rn": "run",
          "connect": "run",
          "con": "run",
          "t": "tag"
        },
        "description": "Runs docker image command",
        "example": "keg docker image <options>",
        "options": {
          "cmd": {
            "description": "Docker image command to run. Default ( ls )",
            "example": "keg docker image ls"
          },
          "name": {
            "description": "Name of the container to run the command on",
            "example": "keg docker image --name core"
          },
          "force": {
            "description": "Add the force argument to the docker command",
            "example": "keg docker image --force "
          },
          "format": {
            "allowed": [
              "json"
            ],
            "description": "Change output format of docker cli commands",
            "example": "keg docker image --format json "
          }
        }
      },
      "log": {
        "name": "log",
        "alias": [
          "lg"
        ],
        "description": "Remove unused docker items",
        "example": "keg docker prune <options>",
        "options": {
          "context": {
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Context of the docker container to log",
            "example": "keg docker log --context core",
            "enforced": true
          },
          "follow": {
            "alias": [
              "f",
              "tail",
              "t"
            ],
            "description": "",
            "example": "keg docker log --follow false",
            "default": true
          },
          "log": {
            "alias": [
              "lg"
            ],
            "description": "Prints log information as the task runs",
            "example": "keg docker log --log",
            "default": true
          },
          "tap": {
            "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\"",
            "example": "keg docker log --context tap --tap events-force"
          }
        },
        "tasks": {}
      },
      "machine": {
        "name": "machine",
        "alias": [
          "mach",
          "m",
          "dm"
        ],
        "description": "Runs docker-machine command",
        "example": "keg docker machine <options>",
        "options": {
          "cmd": {
            "description": "The docker-machine command to run. Default ( ls )",
            "enforced": true
          }
        },
        "tasks": {}
      },
      "package": {
        "name": "package",
        "alias": [
          "dpg",
          "pack",
          "pk"
        ],
        "description": "Packages a docker container for deploying to a docker provider",
        "example": "keg docker package <options>",
        "locationContext": "REPO",
        "tasks": {
          "run": {
            "name": "run",
            "description": "Runs a git pr docker image in a container",
            "example": "keg docker package run <options>",
            "options": {
              "package": {
                "description": "Pull request package url or name",
                "example": "keg docker package --package lancetipton/keg-core/keg-core:bug-fixes",
                "required": true,
                "ask": {
                  "message": "Enter the docker package url or path (<user>/<repo>/<package>:<tag>)"
                }
              },
              "command": {
                "alias": [
                  "cmd"
                ],
                "description": "Overwrites the default yarn command. Command must exist in package.json scripts!",
                "example": "keg docker package run --command dev ( Runs \"yarn dev\" )"
              },
              "branch": {
                "description": "Name of branch name that exists as the image name",
                "example": "keg docker package run --branch develop"
              },
              "context": {
                "alias": [
                  "name"
                ],
                "allowed": [],
                "description": "Context of the docker package to run",
                "example": "keg docker package run --context core",
                "enforced": true
              },
              "cleanup": {
                "alias": [
                  "clean",
                  "rm"
                ],
                "description": "Auto remove the docker container after exiting",
                "example": "keg docker package run --cleanup false",
                "default": true
              },
              "provider": {
                "alias": [
                  "pro"
                ],
                "description": "Url of the docker registry provider",
                "example": "keg docker package run --provider docker.pkg.github.com"
              },
              "repo": {
                "description": "The name of the repository holding docker images to pull",
                "example": "keg docker package run --repo keg-core"
              },
              "user": {
                "alias": [
                  "usr"
                ],
                "description": "User to use when logging into the registry provider. Defaults to the docker.user property in your global config.",
                "example": "keg docker package run --user gituser"
              },
              "version": {
                "description": "The version of the image to use. If omitted, the cli will prompt you to select an available version.",
                "example": "keg docker package run --version 0.0.1"
              }
            },
            "tasks": {}
          }
        },
        "options": {
          "context": {
            "alias": [
              "name"
            ],
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Context of the docker container to build",
            "example": "keg docker package --context core",
            "enforced": true
          },
          "log": {
            "description": "Log the output the of commands",
            "default": false
          },
          "push": {
            "description": "Push the packaged image up to a docker provider registry",
            "required": true,
            "ask": {
              "type": "confirm",
              "message": "Do you want to push to your docker provider?",
              "default": false
            }
          },
          "tag": {
            "alias": [
              "tg"
            ],
            "description": "Tag for the image create for the package. Defaults to the current branch of the passed in context",
            "example": "keg docker package tag=my-tag"
          },
          "tap": {
            "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\"",
            "example": "keg docker package --context tap --tap visitapps"
          }
        }
      },
      "provider": {
        "name": "provider",
        "alias": [
          "prov",
          "pro",
          "pr",
          "p",
          "dp"
        ],
        "tasks": {
          "login": {
            "name": "login",
            "alias": [
              "lgn",
              "lg"
            ],
            "description": "Log into the Docker registry provider",
            "example": "keg docker provider login <options>",
            "options": {
              "user": {
                "description": "User to use when logging into the registry provider",
                "example": "keg docker provider login --user foobar",
                "enforced": true
              },
              "provider": {
                "description": "Url of the docker registry provider",
                "example": "keg docker provider login --provider docker.pkg.github.com",
                "enforced": true
              },
              "token": {
                "description": "API Token for registry provider to allow logging in",
                "example": "keg docker provider login --token 12345",
                "enforced": true
              }
            },
            "tasks": {}
          },
          "pull": {
            "name": "pull",
            "alias": [
              "pl"
            ],
            "description": "Pulls an image from a Docker registry provider",
            "example": "keg docker provider pull <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of the docker container to build",
                "example": "keg docker provider pull --context core",
                "enforced": true
              },
              "branch": {
                "description": "Name of branch name that exists as the image name",
                "example": "keg docker provider pull --branch develop"
              },
              "provider": {
                "description": "Url of the docker registry provider",
                "example": "keg docker provider pull --provider docker.pkg.github.com",
                "default": "docker.pkg.github.com"
              },
              "repo": {
                "description": "The name of the repository holding docker images to pull",
                "example": "keg docker provider pull --repo keg-core"
              },
              "tag": {
                "description": "Specify the tag tied to the image being pushed",
                "example": "keg docker provider pull --tag latest",
                "default": "latest"
              },
              "tap": {
                "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\"",
                "example": "keg docker provider pull --tap visitapps"
              },
              "token": {
                "description": "API Token for registry provider to allow logging in",
                "example": "keg docker provider pull --token 12345"
              },
              "user": {
                "description": "User to use when logging into the registry provider. Defaults to the docker.user property in your global config.",
                "example": "keg docker provider pull --user gituser"
              },
              "version": {
                "description": "The version of the image to use. If omitted, the cli will prompt you to select an available version.",
                "example": "keg docker provider pull --version 0.0.1"
              }
            },
            "tasks": {}
          },
          "push": {
            "name": "push",
            "alias": [
              "psh"
            ],
            "description": "Pushes an image to a Docker registry provider",
            "example": "keg docker provider push <options>",
            "options": {
              "context": {
                "allowed": [
                  "base",
                  "components",
                  "core",
                  "proxy",
                  "regulator",
                  "tap"
                ],
                "description": "Context of the docker container to build",
                "enforced": true
              },
              "build": {
                "description": "Build the docker image before pushing to the provider",
                "default": false
              },
              "namespace": {
                "description": "Use the docker namespace instead of the user for the docker provider url",
                "default": true
              },
              "tag": {
                "description": "Specify the tag tied to the image being pushed",
                "default": "latest"
              },
              "tags": {
                "description": "Extra tags to add to the docker image after its build. Uses commas (,) to separate",
                "example": "keg docker build tags=my-tag,local,development"
              },
              "tap": {
                "description": "Name of the tap to build. Only needed if \"context\" argument is \"tap\""
              },
              "token": {
                "description": "API Token for the registry provider"
              },
              "user": {
                "description": "User to use when logging into the registry provider"
              }
            },
            "tasks": {}
          },
          "lgn": "login",
          "lg": "login",
          "pl": "pull",
          "psh": "push"
        },
        "description": "Docker registry provider tasks",
        "example": "keg docker provider <task> <options>"
      },
      "prune": {
        "name": "prune",
        "alias": [
          "clean"
        ],
        "description": "Remove unused docker items",
        "example": "keg docker prune <options>",
        "options": {
          "all": {
            "description": "Remove all unused images, not just dangling images",
            "example": "keg docker prune --all false",
            "default": true
          },
          "confirm": {
            "alias": [
              "conf"
            ],
            "description": "Confirm docker prune command",
            "example": "keg docker prune --confirm",
            "default": false
          },
          "volumes": {
            "alias": [
              "vol",
              "v"
            ],
            "description": "Confirm docker prune command",
            "example": "keg docker prune --volumes false",
            "default": true
          }
        },
        "tasks": {}
      },
      "restart": {
        "name": "restart",
        "alias": [
          "rst",
          "rs",
          "dr"
        ],
        "description": "Restarts a docker container",
        "example": "keg docker restart <options>",
        "locationContext": "REPO",
        "options": {
          "context": {
            "description": "Context, name, or Id of the docker container to restart",
            "enforced": true
          }
        },
        "tasks": {}
      },
      "run": {
        "name": "run",
        "alias": [
          "r"
        ],
        "description": "Runs docker run command for a container",
        "example": "keg docker run <options>",
        "locationContext": "REPO",
        "options": {
          "context": {
            "allowed": [
              "base",
              "components",
              "core",
              "proxy",
              "regulator",
              "tap"
            ],
            "description": "Name of the docker container to run",
            "enforced": true
          },
          "connect": {
            "alias": [
              "conn",
              "con",
              "it"
            ],
            "description": "Auto connects to the docker containers stdio",
            "example": "keg docker run --connect false",
            "default": true
          },
          "command": {
            "alias": [
              "cmd"
            ],
            "description": "Overwrites the default yarn command. Command must exist in package.json scripts!",
            "example": "keg docker run --command dev ( Runs \"yarn dev\" )",
            "default": "web"
          },
          "entrypoint": {
            "alias": [
              "entry",
              "ep"
            ],
            "description": "Override the default entry point of the container"
          },
          "env": {
            "description": "Environment to start the Docker container in",
            "default": "development"
          },
          "docker": {
            "description": "Extra docker arguments to pass to the 'docker run command'"
          },
          "image": {
            "description": "Name of the docker image to use. Defaults to context:latest",
            "example": "keg docker run --image my-image:test"
          },
          "install": {
            "description": "Run yarn install before starting the application",
            "example": "keg docker run --install"
          },
          "log": {
            "alias": [
              "lg"
            ],
            "description": "Prints log information as the task runs",
            "example": "keg docker run --log",
            "default": false
          },
          "mounts": {
            "description": "List of key names or folder paths to mount into the docker container, separated by (,)",
            "example": "keg docker run mounts=tap,cli,core",
            "default": false
          },
          "tap": {
            "description": "Name of the tap to build. Required when \"context\" argument is \"tap\""
          }
        },
        "tasks": {}
      },
      "test": {
        "name": "test",
        "description": "Remove unused docker items",
        "example": "keg docker prune <options>",
        "options": {
          "method": {
            "description": "Docker method to run. Use dot notation to access sub methods of the docker lib",
            "example": "keg docker test --method container.port",
            "default": "container.list"
          },
          "options": {
            "alias": [
              "opts"
            ],
            "description": "Comma separated list of arguments to pass to the method",
            "example": "keg docker test --method container.port --options core,19006"
          },
          "format": {
            "description": "Format of the docker cli output",
            "example": "keg docker test --method container.port --format text",
            "default": "json"
          }
        },
        "tasks": {}
      },
      "volume": {
        "name": "volume",
        "alias": [
          "vol"
        ],
        "description": "Run tasks on docker volume",
        "example": "keg docker volume <options>",
        "tasks": {}
      },
      "bld": "build",
      "b": "build",
      "comp": "compose",
      "cmp": "compose",
      "cm": "compose",
      "dcp": "compose",
      "cont": "container",
      "c": "container",
      "dc": "container",
      "cp": "copy",
      "des": "destroy",
      "kill": "destroy",
      "ex": "exec",
      "attach": "exec",
      "att": "exec",
      "img": "image",
      "i": "image",
      "di": "image",
      "lg": "log",
      "mach": "machine",
      "m": "machine",
      "dm": "machine",
      "dpg": "package",
      "pack": "package",
      "pk": "package",
      "prov": "provider",
      "pro": "provider",
      "pr": "provider",
      "p": "provider",
      "dp": "provider",
      "clean": "prune",
      "rst": "restart",
      "rs": "restart",
      "dr": "restart",
      "r": "run",
      "vol": "volume"
    },
    "description": "Keg Docker specific tasks",
    "example": "keg docker <command> <options>",
    "options": {
      "cmd": {
        "description": "Docker container command to run. Default ( ls )",
        "example": "keg docker container ls"
      },
      "name": {
        "description": "Name of the container to run the command on",
        "example": "keg docker container --name core"
      },
      "force": {
        "alias": [
          "f"
        ],
        "description": "Force remove the image or container, when remove option is set"
      },
      "format": {
        "allowed": [
          "json"
        ],
        "description": "Output format of the docker command",
        "example": "keg docker container --format json"
      }
    }
  }
}